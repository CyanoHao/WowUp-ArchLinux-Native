diff --git a/wowup-electron/src/app/components/common/client-selector/client-selector.component.html b/wowup-electron/src/app/components/common/client-selector/client-selector.component.html
index 2fc7649c..0762f2bb 100644
--- a/wowup-electron/src/app/components/common/client-selector/client-selector.component.html
+++ b/wowup-electron/src/app/components/common/client-selector/client-selector.component.html
@@ -25,7 +25,7 @@
       </mat-select-trigger>
       <mat-option [value]="installation.id" *ngFor="let installation of wowInstallations$ | async">
         <div class="d-flex">
-          <div class="flex-grow-1">{{ installation.label }}</div>
+          <div class="flex-grow-1">{{ installation.displayName }}</div>
           <div *ngIf="updates && installation.availableUpdateCount > 0">
             <div class="d-inline update-badge ml-1 text-white">
               {{ installation.availableUpdateCount }}
diff --git a/wowup-electron/src/app/components/common/client-selector/client-selector.component.ts b/wowup-electron/src/app/components/common/client-selector/client-selector.component.ts
index 0a3bbf4d..b21fa339 100644
--- a/wowup-electron/src/app/components/common/client-selector/client-selector.component.ts
+++ b/wowup-electron/src/app/components/common/client-selector/client-selector.component.ts
@@ -23,7 +23,7 @@ export class ClientSelectorComponent implements OnInit {
   );
 
   public readonly selectedWowInstallationLabel$ = this._sessionService.selectedWowInstallation$.pipe(
-    map((wowInstall) => wowInstall?.label ?? "")
+    map((wowInstall) => wowInstall?.displayName ?? "")
   );
 
   public wowInstallations$: Observable<WowInstallation[]> = combineLatest([
diff --git a/wowup-electron/src/app/components/options/wow-client-options/wow-client-options.component.html b/wowup-electron/src/app/components/options/wow-client-options/wow-client-options.component.html
index 9b332798..a599f07d 100644
--- a/wowup-electron/src/app/components/options/wow-client-options/wow-client-options.component.html
+++ b/wowup-electron/src/app/components/options/wow-client-options/wow-client-options.component.html
@@ -3,7 +3,7 @@
     <img [src]="wowLogoImage" />
   </div>
   <mat-card-title class="row">
-    <div *ngIf="(editMode$ | async) === false" class="flex-grow-1">{{ installationModel.label }}</div>
+    <div *ngIf="(editMode$ | async) === false" class="flex-grow-1">{{ installationModel.displayName }}</div>
     <mat-form-field *ngIf="(editMode$ | async) === true" class="no-input-border w-100">
       <input matInput [(ngModel)]="installationModel.label" />
     </mat-form-field>
diff --git a/wowup-electron/src/app/pages/get-addons/get-addons.component.spec.ts b/wowup-electron/src/app/pages/get-addons/get-addons.component.spec.ts
index e7d51e47..40be553f 100644
--- a/wowup-electron/src/app/pages/get-addons/get-addons.component.spec.ts
+++ b/wowup-electron/src/app/pages/get-addons/get-addons.component.spec.ts
@@ -53,6 +53,7 @@ describe("GetAddonsComponent", () => {
             clientType: WowClientType.Retail,
             location: "C:/fake_wow",
             label: "Wow Unit Test Client",
+            displayName: "Wow Unit Test Client",
             defaultAutoUpdate: false,
             selected: true,
           };
diff --git a/wowup-electron/src/app/pages/my-addons/my-addons.component.ts b/wowup-electron/src/app/pages/my-addons/my-addons.component.ts
index 4a6fe569..e0e58c18 100644
--- a/wowup-electron/src/app/pages/my-addons/my-addons.component.ts
+++ b/wowup-electron/src/app/pages/my-addons/my-addons.component.ts
@@ -109,7 +109,7 @@ export class MyAddonsComponent implements OnInit, OnDestroy, AfterViewInit {
   public readonly selectedWowInstallation$ = this._sessionService.selectedWowInstallation$;
 
   public readonly selectedWowInstallationLabel$ = this._sessionService.selectedWowInstallation$.pipe(
-    map((wowInstall) => wowInstall?.label ?? "")
+    map((wowInstall) => wowInstall?.displayName ?? "")
   );
 
   public readonly selectedWowInstallationId$ = this._sessionService.selectedWowInstallation$.pipe(
diff --git a/wowup-electron/src/app/services/warcraft/warcraft-installation.service.ts b/wowup-electron/src/app/services/warcraft/warcraft-installation.service.ts
index ebf99316..7a114f2f 100644
--- a/wowup-electron/src/app/services/warcraft/warcraft-installation.service.ts
+++ b/wowup-electron/src/app/services/warcraft/warcraft-installation.service.ts
@@ -43,6 +43,14 @@ export class WarcraftInstallationService {
     private _electronService: ElectronService
   ) {
     this._wowInstallationsSrc.subscribe((installations) => {
+      for (const installation of installations) {
+        // Saved display names can be unreliable (e.g. language change,
+        // expansion release). Always regenerate them.
+        const typeName = getEnumName(WowClientType, installation.clientType);
+        this.getDisplayName(installation.label, typeName).then(
+          displayName => installation.displayName = displayName
+        ).catch(() => {});
+      }
       this._wowInstallations = installations;
     });
 
@@ -128,6 +136,9 @@ export class WarcraftInstallationService {
   }
 
   public async updateWowInstallation(wowInstallation: WowInstallation): Promise<void> {
+    const typeName = getEnumName(WowClientType, wowInstallation.clientType);
+    wowInstallation.displayName = await this.getDisplayName(wowInstallation.label, typeName);
+
     const storedInstallations = await this.getWowInstallationsAsync();
     const matchIndex = _.findIndex(storedInstallations, (installation) => installation.id === wowInstallation.id);
 
@@ -204,7 +215,8 @@ export class WarcraftInstallationService {
     const typeName = getEnumName(WowClientType, clientType);
     const currentInstallations = await this.getWowInstallationsByClientType(clientType);
 
-    const label = await this.getNewInstallLabel(typeName, currentInstallations.length);
+    const label = currentInstallations.length ? `{defaultName} ${currentInstallations.length + 1}` : "{defaultName}";
+    const displayName = await this.getDisplayName(label, typeName);
 
     const installation: WowInstallation = {
       id: uuidv4(),
@@ -212,6 +224,7 @@ export class WarcraftInstallationService {
       defaultAddonChannelType: AddonChannelType.Stable,
       defaultAutoUpdate: false,
       label: label,
+      displayName: displayName,
       location: applicationPath,
       selected: false,
     };
@@ -233,7 +246,8 @@ export class WarcraftInstallationService {
       const typeName = getEnumName(WowClientType, product.clientType);
       const currentInstallations = await this.getWowInstallationsByClientType(product.clientType);
 
-      const label = await this.getNewInstallLabel(typeName, currentInstallations.length);
+      const label = currentInstallations.length ? `{defaultName} ${currentInstallations.length + 1}` : "{defaultName}";
+      const displayName = await this.getDisplayName(label, typeName);
 
       const fullProductPath = this.getFullProductPath(product.location, product.clientType);
 
@@ -245,6 +259,7 @@ export class WarcraftInstallationService {
         id: uuidv4(),
         clientType: product.clientType,
         label,
+        displayName,
         location: fullProductPath,
         selected: false,
         defaultAddonChannelType: AddonChannelType.Stable,
@@ -262,13 +277,9 @@ export class WarcraftInstallationService {
     this._wowInstallationsSrc.next(wowInstallations);
   }
 
-  private async getNewInstallLabel(typeName: string, installCt: number): Promise<string> {
-    let label = await this._translateService.get(`COMMON.CLIENT_TYPES.${typeName.toUpperCase()}`).toPromise();
-    if (installCt > 0) {
-      label += ` ${installCt + 1}`;
-    }
-
-    return label;
+  private async getDisplayName(label: string, typeName: string): Promise<string> {
+    const defaultName: string = await this._translateService.get(`COMMON.CLIENT_TYPES.${typeName.toUpperCase()}`).toPromise();
+    return label.replace("{defaultName}", defaultName);
   }
 
   private getFullProductPath(location: string, clientType: WowClientType): string {
diff --git a/wowup-electron/src/assets/i18n/cs.json b/wowup-electron/src/assets/i18n/cs.json
index 7c45ccee..49b9b402 100644
--- a/wowup-electron/src/assets/i18n/cs.json
+++ b/wowup-electron/src/assets/i18n/cs.json
@@ -178,14 +178,14 @@
       "TOC_NAME_MISMATCH_TOOLTIP": "This addon's folder does not match the toc"
     },
     "CLIENT_TYPES": {
-      "BETA": "Beta",
-      "CLASSIC": "Classic",
-      "CLASSICBETA": "Classic Beta",
-      "CLASSICERA": "Classic Era",
-      "CLASSICERAPTR": "Classic Era PTR",
-      "CLASSICPTR": "Classic PTR",
-      "RETAIL": "Retail",
-      "RETAILPTR": "Retail PTR"
+      "BETA": "Dragonflight Beta",
+      "CLASSIC": "Wrath of the Lich King Classic",
+      "CLASSICBETA": "Wrath of the Lich King Classic Beta",
+      "CLASSICERA": "World of Warcraft Classic",
+      "CLASSICERAPTR": "Classic Season of Mastery PTR",
+      "CLASSICPTR": "Public Test Realm (Wrath Classic)",
+      "RETAIL": "Dragonflight",
+      "RETAILPTR": "Public Test Realm"
     },
     "DATES": {
       "DAYS_AGO": "Před {count} {count, plural, =1{dnem} other{dny}}",
diff --git a/wowup-electron/src/assets/i18n/de.json b/wowup-electron/src/assets/i18n/de.json
index b83e9941..539d9916 100644
--- a/wowup-electron/src/assets/i18n/de.json
+++ b/wowup-electron/src/assets/i18n/de.json
@@ -178,14 +178,14 @@
       "TOC_NAME_MISMATCH_TOOLTIP": "Der Ordner dieses Addons stimmt nicht mit der TOC-Datei überein"
     },
     "CLIENT_TYPES": {
-      "BETA": "Beta",
-      "CLASSIC": "Classic",
-      "CLASSICBETA": "Classic Beta",
-      "CLASSICERA": "Classic Era",
-      "CLASSICERAPTR": "Classic Era PTR",
-      "CLASSICPTR": "Classic PTR",
-      "RETAIL": "Retail",
-      "RETAILPTR": "Retail PTR"
+      "BETA": "Beta von Dragonflight",
+      "CLASSIC": "Wrath of the Lich King Classic",
+      "CLASSICBETA": "Beta von Wrath of the Lich King Classic",
+      "CLASSICERA": "World of Warcraft Classic",
+      "CLASSICERAPTR": "Classic Season of Mastery PTR",
+      "CLASSICPTR": "Öffentlicher Testrealm (Wrath Classic)",
+      "RETAIL": "Dragonflight",
+      "RETAILPTR": "Öffentlicher Testrealm (PTR)"
     },
     "DATES": {
       "DAYS_AGO": "Vor {count} {count, plural, one{Tag} other{Tagen}}",
diff --git a/wowup-electron/src/assets/i18n/en.json b/wowup-electron/src/assets/i18n/en.json
index a7effc66..5c8cc7e1 100644
--- a/wowup-electron/src/assets/i18n/en.json
+++ b/wowup-electron/src/assets/i18n/en.json
@@ -178,14 +178,14 @@
       "TOC_NAME_MISMATCH_TOOLTIP": "This addon's folder does not match the toc"
     },
     "CLIENT_TYPES": {
-      "BETA": "Beta",
-      "CLASSIC": "Classic",
-      "CLASSICBETA": "Classic Beta",
-      "CLASSICERA": "Classic Era",
-      "CLASSICERAPTR": "Classic Era PTR",
-      "CLASSICPTR": "Classic PTR",
-      "RETAIL": "Retail",
-      "RETAILPTR": "Retail PTR"
+      "BETA": "Dragonflight Beta",
+      "CLASSIC": "Wrath of the Lich King Classic",
+      "CLASSICBETA": "Wrath of the Lich King Classic Beta",
+      "CLASSICERA": "World of Warcraft Classic",
+      "CLASSICERAPTR": "Classic Season of Mastery PTR",
+      "CLASSICPTR": "Public Test Realm (Wrath Classic)",
+      "RETAIL": "Dragonflight",
+      "RETAILPTR": "Public Test Realm"
     },
     "DATES": {
       "DAYS_AGO": "{count} {count, plural, =1{day} other{days}} ago",
diff --git a/wowup-electron/src/assets/i18n/es.json b/wowup-electron/src/assets/i18n/es.json
index e0ab8dbb..ee3ecd94 100644
--- a/wowup-electron/src/assets/i18n/es.json
+++ b/wowup-electron/src/assets/i18n/es.json
@@ -178,14 +178,14 @@
       "TOC_NAME_MISMATCH_TOOLTIP": "La carpeta de este addon no se corresponde con el archivo toc"
     },
     "CLIENT_TYPES": {
-      "BETA": "Beta",
-      "CLASSIC": "Classic",
-      "CLASSICBETA": "Beta Classic",
-      "CLASSICERA": "Classic Era",
-      "CLASSICERAPTR": "RPP Classic Era",
-      "CLASSICPTR": "RPP Classic",
-      "RETAIL": "Retail",
-      "RETAILPTR": "RPP Retail"
+      "BETA": "Beta de Dragonflight",
+      "CLASSIC": "Wrath of the Lich King Classic",
+      "CLASSICBETA": "Beta de Wrath of the Lich King Classic",
+      "CLASSICERA": "World of Warcraft Classic",
+      "CLASSICERAPTR": "Classic Season of Mastery PTR",
+      "CLASSICPTR": "Reino público de pruebas (Wrath Classic)",
+      "RETAIL": "Dragonflight",
+      "RETAILPTR": "Reino público de pruebas"
     },
     "DATES": {
       "DAYS_AGO": "Hace {count} {count, plural, one{día} other{días}}",
diff --git a/wowup-electron/src/assets/i18n/fr.json b/wowup-electron/src/assets/i18n/fr.json
index 6ec44be9..b28aca99 100644
--- a/wowup-electron/src/assets/i18n/fr.json
+++ b/wowup-electron/src/assets/i18n/fr.json
@@ -178,14 +178,14 @@
       "TOC_NAME_MISMATCH_TOOLTIP": "This addon's folder does not match the toc"
     },
     "CLIENT_TYPES": {
-      "BETA": "Beta",
-      "CLASSIC": "Classic",
-      "CLASSICBETA": "Beta Classic",
-      "CLASSICERA": "Classic Era",
-      "CLASSICERAPTR": "Classic Era PTR",
-      "CLASSICPTR": "PTR Classic",
-      "RETAIL": "Retail",
-      "RETAILPTR": "PTR Retail"
+      "BETA": "Bêta de Dragonflight",
+      "CLASSIC": "Wrath of the Lich King Classic",
+      "CLASSICBETA": "Bêta de Wrath of the Lich King Classic",
+      "CLASSICERA": "World of Warcraft Classic",
+      "CLASSICERAPTR": "Classic Season of Mastery PTR",
+      "CLASSICPTR": "Royaume public de test (Wrath of the Lich King Classic)",
+      "RETAIL": "Dragonflight",
+      "RETAILPTR": "Royaume public de test"
     },
     "DATES": {
       "DAYS_AGO": "il y a {count} {count, plural, one{jour} other{jours}}",
diff --git a/wowup-electron/src/assets/i18n/it.json b/wowup-electron/src/assets/i18n/it.json
index 94389d4a..4c4d47db 100644
--- a/wowup-electron/src/assets/i18n/it.json
+++ b/wowup-electron/src/assets/i18n/it.json
@@ -178,14 +178,14 @@
       "TOC_NAME_MISMATCH_TOOLTIP": "This addon's folder does not match the toc"
     },
     "CLIENT_TYPES": {
-      "BETA": "Beta",
-      "CLASSIC": "Classic",
-      "CLASSICBETA": "Classic Beta",
-      "CLASSICERA": "Classic Era",
-      "CLASSICERAPTR": "Classic Era PTR",
-      "CLASSICPTR": "Classic PTR",
-      "RETAIL": "Retail",
-      "RETAILPTR": "Retail PTR"
+      "BETA": "Beta di Dragonflight",
+      "CLASSIC": "Wrath of the Lich King Classic",
+      "CLASSICBETA": "Beta di Wrath of the Lich King Classic",
+      "CLASSICERA": "World of Warcraft Classic",
+      "CLASSICERAPTR": "Classic Season of Mastery PTR",
+      "CLASSICPTR": "Reame Pubblico di Prova - PTR (Wrath Classic)",
+      "RETAIL": "Dragonflight",
+      "RETAILPTR": "Reame pubblico di prova"
     },
     "DATES": {
       "DAYS_AGO": "{count, plural, one{Un giorno} other{{count} giorni}} fa",
diff --git a/wowup-electron/src/assets/i18n/ko.json b/wowup-electron/src/assets/i18n/ko.json
index a5014a40..13f7b3c5 100644
--- a/wowup-electron/src/assets/i18n/ko.json
+++ b/wowup-electron/src/assets/i18n/ko.json
@@ -178,14 +178,14 @@
       "TOC_NAME_MISMATCH_TOOLTIP": "This addon's folder does not match the toc"
     },
     "CLIENT_TYPES": {
-      "BETA": "베타",
-      "CLASSIC": "클래식",
-      "CLASSICBETA": "클래식 베타",
-      "CLASSICERA": "Classic Era",
-      "CLASSICERAPTR": "Classic Era PTR",
-      "CLASSICPTR": "클래식 PTR",
-      "RETAIL": "리테일",
-      "RETAILPTR": "리테일 PTR"
+      "BETA": "용군단 베타",
+      "CLASSIC": "리치 왕의 분노 클래식",
+      "CLASSICBETA": "리치 왕의 분노 클래식 베타",
+      "CLASSICERA": "월드 오브 워크래프트 클래식",
+      "CLASSICERAPTR": "Classic Season of Mastery PTR",
+      "CLASSICPTR": "공개 테스트 서버 (리치 왕의 분노 클래식)",
+      "RETAIL": "용군단",
+      "RETAILPTR": "공개 테스트 서버"
     },
     "DATES": {
       "DAYS_AGO": "{count}일 전",
diff --git a/wowup-electron/src/assets/i18n/nb.json b/wowup-electron/src/assets/i18n/nb.json
index 593ad3a4..e2167bc5 100644
--- a/wowup-electron/src/assets/i18n/nb.json
+++ b/wowup-electron/src/assets/i18n/nb.json
@@ -178,14 +178,14 @@
       "TOC_NAME_MISMATCH_TOOLTIP": "This addon's folder does not match the toc"
     },
     "CLIENT_TYPES": {
-      "BETA": "Beta",
-      "CLASSIC": "Classic",
-      "CLASSICBETA": "Classic Beta",
-      "CLASSICERA": "Classic Era",
-      "CLASSICERAPTR": "Classic Era PTR",
-      "CLASSICPTR": "Classic PTR",
-      "RETAIL": "Retail",
-      "RETAILPTR": "Retail PTR"
+      "BETA": "Dragonflight Beta",
+      "CLASSIC": "Wrath of the Lich King Classic",
+      "CLASSICBETA": "Wrath of the Lich King Classic Beta",
+      "CLASSICERA": "World of Warcraft Classic",
+      "CLASSICERAPTR": "Classic Season of Mastery PTR",
+      "CLASSICPTR": "Public Test Realm (Wrath Classic)",
+      "RETAIL": "Dragonflight",
+      "RETAILPTR": "Public Test Realm"
     },
     "DATES": {
       "DAYS_AGO": "{count} {count, plural, one{dag} other{dager}} siden",
diff --git a/wowup-electron/src/assets/i18n/pl.json b/wowup-electron/src/assets/i18n/pl.json
index 41ab3349..0a495359 100644
--- a/wowup-electron/src/assets/i18n/pl.json
+++ b/wowup-electron/src/assets/i18n/pl.json
@@ -178,14 +178,14 @@
       "TOC_NAME_MISMATCH_TOOLTIP": "Folder tego addonu nie jest zgodny z toc"
     },
     "CLIENT_TYPES": {
-      "BETA": "Beta",
-      "CLASSIC": "Classic",
-      "CLASSICBETA": "Classic Beta",
-      "CLASSICERA": "Classic Era",
-      "CLASSICERAPTR": "Classic Era PTR",
-      "CLASSICPTR": "Classic PTR",
-      "RETAIL": "Retail",
-      "RETAILPTR": "Retail PTR"
+      "BETA": "Beta Dragonflight",
+      "CLASSIC": "Wrath of the Lich King Classic",
+      "CLASSICBETA": "Beta Wrath of the Lich King Classic",
+      "CLASSICERA": "World of Warcraft Classic",
+      "CLASSICERAPTR": "Classic Season of Mastery PTR",
+      "CLASSICPTR": "Publiczny Serwer Testowy (Wrath Classic)",
+      "RETAIL": "Dragonflight",
+      "RETAILPTR": "Publiczny Serwer Testowy"
     },
     "DATES": {
       "DAYS_AGO": "{count} {count, plural, =1{dzień} other{dni}} temu",
diff --git a/wowup-electron/src/assets/i18n/pt.json b/wowup-electron/src/assets/i18n/pt.json
index 67b8018f..cc5ae2e5 100644
--- a/wowup-electron/src/assets/i18n/pt.json
+++ b/wowup-electron/src/assets/i18n/pt.json
@@ -178,14 +178,14 @@
       "TOC_NAME_MISMATCH_TOOLTIP": "This addon's folder does not match the toc"
     },
     "CLIENT_TYPES": {
-      "BETA": "Beta",
-      "CLASSIC": "Classic",
-      "CLASSICBETA": "Classic Beta",
-      "CLASSICERA": "Classic Era",
-      "CLASSICERAPTR": "Classic Era PTR",
-      "CLASSICPTR": "Classic PTR",
-      "RETAIL": "Retail",
-      "RETAILPTR": "Retail PTR"
+      "BETA": "Beta de Dragonflight",
+      "CLASSIC": "Wrath of the Lich King Classic",
+      "CLASSICBETA": "Beta de Wrath of the Lich King Classic",
+      "CLASSICERA": "World of Warcraft Classic",
+      "CLASSICERAPTR": "Classic Season of Mastery PTR",
+      "CLASSICPTR": "Reino de Teste Público (Wrath Classic)",
+      "RETAIL": "Dragonflight",
+      "RETAILPTR": "Reino de Teste Público"
     },
     "DATES": {
       "DAYS_AGO": "{count} {count, plural, one{dia} other{dias}} atrás",
diff --git a/wowup-electron/src/assets/i18n/ru.json b/wowup-electron/src/assets/i18n/ru.json
index 403e96cc..2f8129e0 100644
--- a/wowup-electron/src/assets/i18n/ru.json
+++ b/wowup-electron/src/assets/i18n/ru.json
@@ -178,14 +178,14 @@
       "TOC_NAME_MISMATCH_TOOLTIP": "Папка этой модификации не соответствует названию"
     },
     "CLIENT_TYPES": {
-      "BETA": "Бета",
-      "CLASSIC": "Классический",
-      "CLASSICBETA": "Классический Бета",
-      "CLASSICERA": "Эпоха классики",
-      "CLASSICERAPTR": "Эпоха классики PTR",
-      "CLASSICPTR": "Классический PTR",
-      "RETAIL": "Актуальный",
-      "RETAILPTR": "Актуальный PTR"
+      "BETA": "Бета Dragonflight",
+      "CLASSIC": "Wrath of the Lich King Classic",
+      "CLASSICBETA": "Бета Wrath of the Lich King Classic",
+      "CLASSICERA": "World of Warcraft Classic",
+      "CLASSICERAPTR": "Classic Season of Mastery PTR",
+      "CLASSICPTR": "PTR (Wrath Classic)",
+      "RETAIL": "Dragonflight",
+      "RETAILPTR": "Тестовый игровой мир (PTR)"
     },
     "DATES": {
       "DAYS_AGO": "{count} {count, plural, one{день} few{дня} other{дней}} назад",
diff --git a/wowup-electron/src/assets/i18n/zh-TW.json b/wowup-electron/src/assets/i18n/zh-TW.json
index 54bb0173..e1c3fd32 100644
--- a/wowup-electron/src/assets/i18n/zh-TW.json
+++ b/wowup-electron/src/assets/i18n/zh-TW.json
@@ -178,14 +178,14 @@
       "TOC_NAME_MISMATCH_TOOLTIP": "插件資料夾和 TOC 不匹配"
     },
     "CLIENT_TYPES": {
-      "BETA": "巨龍崛起 Beta",
-      "CLASSIC": "巫妖王之怒",
-      "CLASSICBETA": "巫妖王之怒 Beta",
-      "CLASSICERA": "經典舊世",
-      "CLASSICERAPTR": "經典舊世大師賽季 PTR",
-      "CLASSICPTR": "巫妖王之怒 PTR",
+      "BETA": "《巨龍崛起》Beta 測試",
+      "CLASSIC": "《巫妖王之怒》經典版",
+      "CLASSICBETA": "《巫妖王之怒》經典版 Beta 測試",
+      "CLASSICERA": "《魔獸世界》經典版",
+      "CLASSICERAPTR": "Classic Season of Mastery PTR",
+      "CLASSICPTR": "PTR《巫妖王之怒》",
       "RETAIL": "巨龍崛起",
-      "RETAILPTR": "巨龍崛起 PTR"
+      "RETAILPTR": "測試伺服器"
     },
     "DATES": {
       "DAYS_AGO": "{count} 天前",
diff --git a/wowup-electron/src/assets/i18n/zh.json b/wowup-electron/src/assets/i18n/zh.json
index e39a983d..9b1f343f 100644
--- a/wowup-electron/src/assets/i18n/zh.json
+++ b/wowup-electron/src/assets/i18n/zh.json
@@ -178,14 +178,14 @@
       "TOC_NAME_MISMATCH_TOOLTIP": "插件文件夹和 TOC 不匹配"
     },
     "CLIENT_TYPES": {
-      "BETA": "巨龙时代 Beta",
-      "CLASSIC": "巫妖王之怒",
-      "CLASSICBETA": "巫妖王之怒 Beta",
-      "CLASSICERA": "经典旧世",
-      "CLASSICERAPTR": "经典旧世赛季服 PTR",
-      "CLASSICPTR": "巫妖王之怒 PTR",
+      "BETA": "“巨龙时代” Beta 测试",
+      "CLASSIC": "“巫妖王之怒”",
+      "CLASSICBETA": "“巫妖王之怒” 测试服",
+      "CLASSICERA": "魔兽世界（经典怀旧服）",
+      "CLASSICERAPTR": "Classic Season of Mastery PTR",
+      "CLASSICPTR": "公开测试服（巫妖王之怒）",
       "RETAIL": "巨龙时代",
-      "RETAILPTR": "巨龙时代 PTR"
+      "RETAILPTR": "公共测试服"
     },
     "DATES": {
       "DAYS_AGO": "{count} 天前",
diff --git a/wowup-electron/src/common/warcraft/wow-installation.ts b/wowup-electron/src/common/warcraft/wow-installation.ts
index 033fdf36..2a2f7a0f 100644
--- a/wowup-electron/src/common/warcraft/wow-installation.ts
+++ b/wowup-electron/src/common/warcraft/wow-installation.ts
@@ -6,6 +6,7 @@ export interface WowInstallation {
   clientType: WowClientType;
   location: string;
   label: string;
+  displayName: string;
   selected: boolean;
   defaultAddonChannelType: AddonChannelType;
   defaultAutoUpdate: boolean;
